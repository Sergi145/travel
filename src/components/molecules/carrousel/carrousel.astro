---
import './carrousel.css';
import Button from '../../atoms/Button/Button.astro';
---

<section id="myCarousel" class="carousel-tablist" aria-roledescription="carousel" aria-label="Highlighted television shows">
    <div class="carousel-inner">
      <div class="controls">
        <div class="tab-wrapper">
          <div role="tablist" aria-label="Slides">
            <button id="carousel-tab-1" type="button" role="tab" aria-label="Slide 1" aria-selected="true" aria-controls="carousel-item-1">
              <svg width="34" height="34" version="1.1" xmlns="http://www.w3.org/2000/svg">
                <circle class="border" cx="16" cy="15" r="10"></circle>
                <circle class="tab-background" cx="16" cy="15" r="8"></circle>
                <circle class="tab" cx="16" cy="15" r="6"></circle>
              </svg>
            </button>
            <button id="carousel-tab-2" type="button" role="tab" tabindex="-1" aria-label="Slide 2" aria-selected="false" aria-controls="carousel-item-2">
              <svg width="34" height="34" version="1.1" xmlns="http://www.w3.org/2000/svg">
                <circle class="border" cx="16" cy="15" r="10"></circle>
                <circle class="tab-background" cx="16" cy="15" r="8"></circle>
                <circle class="tab" cx="16" cy="15" r="6"></circle>
              </svg>
            </button>
            <button id="carousel-tab-3" type="button" role="tab" tabindex="-1" aria-label="Slide 3" aria-selected="false" aria-controls="carousel-item-3">
              <svg width="34" height="34" version="1.1" xmlns="http://www.w3.org/2000/svg">
                <circle class="border" cx="16" cy="15" r="10"></circle>
                <circle class="tab-background" cx="16" cy="15" r="8"></circle>
                <circle class="tab" cx="16" cy="15" r="6"></circle>
              </svg>
            </button>
          </div>
        </div>
      </div>
  
      <div id="myCarousel-items" class="carousel-items playing" aria-live="off">
        <div class="carousel-item active" id="carousel-item-1" role="tabpanel" aria-roledescription="slide" aria-label="1 de 3">
          <div class="carousel-image">
            <a href="#" id="carousel-image-1" aria-label="enlace para ir a ruta por Australia">
              <img src="./../../../../public/fondo.png" alt="">
            </a>
          </div>
          <div class="carousel-caption">
            <p class="carousel__text carousel__text--title" id=title_route"">Ruta por Australia</p>
            <p class="carousel__text carousel__text--description">Si te va la aventura, no te lo puedes perder</p>
            <Button className="button button--secondary" aria-labelledby="button_more title_route"><span></span>Más información<span class="sr-only">sobre Ruta por Australia</span></Button>
          </div>        
        </div>

        <div class="carousel-item" id="carousel-item-2" role="tabpanel" aria-roledescription="slide" aria-label="2 de 3">
          <div class="carousel-image">
            <a href="#" id="carousel-image-2" aria-label="enlace para ir a ruta por Australia">
              <img src="https://fastly.picsum.photos/id/668/1400/400.jpg?hmac=sYoE7ZSQlpe4_BlTMTfdNrWklDOonMslBmiUF0aeXro" alt="">
            </a>
          </div>
  
          <div class="carousel-caption">
            <p class="carousel__text carousel__text--title">Ruta por Australia</p>
            <p class="carousel__text carousel__text--description">Si te va la aventura, no te lo puedes perder</p>
          </div> 
          </div>
        
  
        <div class="carousel-item" id="carousel-item-3" role="tabpanel" aria-roledescription="slide" aria-label="3 de 3">
          <div class="carousel-image">
            <a href="#!" id="carousel-image-3" aria-label="enlace para ir a ruta por Australia">
              <img src="./../../../../public/fondo.png" alt="">
            </a>
          </div>
          <div class="carousel-caption">
            <p class="carousel__text carousel__text--title">Ruta por Australia</p>
            <p class="carousel__text carousel__text--description">Si te va la aventura, no te lo puedes perder</p>
          </div> 
        </div>
          </div>
          <button class="carousel_control carousel-control-prev" aria-label="Previous slide">
            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect width="40" height="40" rx="2" fill="white"/>
              <rect width="40" height="40" rx="2" fill="#622F60" fill-opacity="0.32"/>
              <path d="M16.7103 20.7082C16.3184 20.3174 16.3184 19.6826 16.7103 19.2919L21.7805 14.2371C22.1707 13.848 22.8022 13.848 23.1925 14.2371L23.2897 14.334C23.6816 14.7247 23.6816 15.3595 23.2897 15.7503L19.027 20L23.2897 24.2498C23.6816 24.6405 23.6816 25.2753 23.2897 25.6661L23.1925 25.763C22.8022 26.1521 22.1707 26.1521 21.7805 25.763L16.7103 20.7082Z" fill="white"/>
              </svg>
          </button>
          
          <button class="carousel_control carousel-control-next" aria-label="Next slide">
            <svg width="40" height="40" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
              <rect width="40" height="40" rx="2" fill="white"/>
              <rect width="40" height="40" rx="2" fill="#622F60" fill-opacity="0.32"/>
              <path d="M23.2897 19.2918C23.6816 19.6826 23.6816 20.3174 23.2897 20.7081L18.2195 25.7629C17.8293 26.152 17.1978 26.152 16.8075 25.7629L16.7103 25.666C16.3184 25.2753 16.3184 24.6405 16.7103 24.2497L20.973 20L16.7103 15.7502C16.3184 15.3595 16.3184 14.7247 16.7103 14.3339L16.8075 14.237C17.1978 13.8479 17.8293 13.8479 18.2195 14.237L23.2897 19.2918Z" fill="white"/>
              </svg>            
          </button>
        </div> 
      </div>
      
    </div>

  </section>
  
  <script type="module" client:load>

var CarouselTablist = function (node, options) {
  options = Object.assign(
    { moreaccessible: false, paused: false, norotate: false },
    options || {}
  );

  var hasReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)');
  if (hasReducedMotion.matches) {
    options.paused = true;
  }

  this.domNode = node;
  this.tablistNode = node.querySelector('[role=tablist]');
  this.containerNode = node.querySelector('.carousel-items');
  this.tabNodes = [];
  this.tabpanelNodes = [];
  this.liveRegionNode = node.querySelector('.carousel-items');
  this.pausePlayButtonNode = document.querySelector('.carousel-tablist .controls button.rotation');
  this.playLabel = 'Start automatic slide show';
  this.pauseLabel = 'Stop automatic slide show';
  this.hasUserActivatedPlay = false;
  this.isAutoRotationDisabled = options.norotate;
  this.isPlayingEnabled = !options.paused;
  this.timeInterval = 5000;
  this.currentIndex = 0;
  this.slideTimeout = null;

  this.tablistNode.addEventListener('focusin', this.handleTabFocus.bind(this));
  this.tablistNode.addEventListener('focusout', this.handleTabBlur.bind(this));

  var nodes = node.querySelectorAll('[role="tab"]');
  for (var i = 0; i < nodes.length; i++) {
    var n = nodes[i];
    this.tabNodes.push(n);

    n.addEventListener('keydown', this.handleTabKeydown.bind(this));
    n.addEventListener('click', this.handleTabClick.bind(this));

    var tabpanelNode = document.getElementById(n.getAttribute('aria-controls'));
    if (tabpanelNode) {
      this.tabpanelNodes.push(tabpanelNode);

      tabpanelNode.addEventListener('focusin', this.handleTabpanelFocusIn.bind(this));
      tabpanelNode.addEventListener('focusout', this.handleTabpanelFocusOut.bind(this));

      var imageLink = tabpanelNode.querySelector('.carousel-image a');
      if (imageLink) {
        imageLink.addEventListener('focus', this.handleImageLinkFocus.bind(this));
        imageLink.addEventListener('blur', this.handleImageLinkBlur.bind(this));
      }
    } else {
      this.tabpanelNodes.push(null);
    }
  }

  if (this.pausePlayButtonNode) {
    this.pausePlayButtonNode.addEventListener('click', this.handlePausePlayButtonClick.bind(this));
  }



};

CarouselTablist.prototype.enableOrDisableAutoRotation = function (disable) {
  this.isAutoRotationDisabled = disable;
  this.pausePlayButtonNode.hidden = disable;
};

CarouselTablist.prototype.setAccessibleStyling = function (accessible) {
  if (accessible) {
    this.domNode.classList.add('carousel-tablist-moreaccessible');
  } else {
    this.domNode.classList.remove('carousel-tablist-moreaccessible');
  }
};

CarouselTablist.prototype.hideTabpanel = function (index) {
  var tabNode = this.tabNodes[index];
  var panelNode = this.tabpanelNodes[index];

  tabNode.setAttribute('aria-selected', 'false');
  tabNode.setAttribute('tabindex', '-1');

  if (panelNode) {
    panelNode.classList.remove('active');
  }
};

CarouselTablist.prototype.showTabpanel = function (index, moveFocus) {
  var tabNode = this.tabNodes[index];
  var panelNode = this.tabpanelNodes[index];

  tabNode.setAttribute('aria-selected', 'true');
  tabNode.removeAttribute('tabindex');

  if (panelNode) {
    panelNode.classList.add('active');
  }

  if (moveFocus) {
    tabNode.focus();
  }
};

CarouselTablist.prototype.setSelectedTab = function (index, moveFocus) {
  if (index === this.currentIndex) {
    return;
  }
  this.currentIndex = index;

  for (var i = 0; i < this.tabNodes.length; i++) {
    this.hideTabpanel(i);
  }

  this.showTabpanel(index, moveFocus);
};

CarouselTablist.prototype.setSelectedToPreviousTab = function (moveFocus) {
  var nextIndex = this.currentIndex - 1;

  if (nextIndex < 0) {
    nextIndex = this.tabNodes.length - 1;
  }

  this.setSelectedTab(nextIndex, moveFocus);
};

CarouselTablist.prototype.setSelectedToNextTab = function (moveFocus) {
  var nextIndex = this.currentIndex + 1;

  if (nextIndex >= this.tabNodes.length) {
    nextIndex = 0;
  }

  this.setSelectedTab(nextIndex, moveFocus);
};

CarouselTablist.prototype.rotateSlides = function () {
  if (!this.isAutoRotationDisabled) {
    if ((!this.hasFocus && !this.hasHover && this.isPlayingEnabled) || this.hasUserActivatedPlay) {
      this.setSelectedToNextTab(false);
    }
  }

  this.slideTimeout = setTimeout(this.rotateSlides.bind(this), this.timeInterval);
};

CarouselTablist.prototype.handleImageLinkFocus = function () {
  this.liveRegionNode.classList.add('focus');
};

CarouselTablist.prototype.handleImageLinkBlur = function () {
  this.liveRegionNode.classList.remove('focus');
};


CarouselTablist.prototype.handleMouseOut = function () {
  this.hasHover = false;
};

CarouselTablist.prototype.handlePausePlayButtonClick = function () {
  this.hasUserActivatedPlay = !this.isPlayingEnabled;
  this.updatePlaying(!this.isPlayingEnabled);
};

CarouselTablist.prototype.handleTabKeydown = function (event) {
  var flag = false;

  switch (event.key) {
    case 'ArrowRight':
      this.setSelectedToNextTab(true);
      flag = true;
      break;

    case 'ArrowLeft':
      this.setSelectedToPreviousTab(true);
      flag = true;
      break;

    case 'Home':
      this.setSelectedTab(0, true);
      flag = true;
      break;

    case 'End':
      this.setSelectedTab(this.tabNodes.length - 1, true);
      flag = true;
      break;

    default:
      break;
  }

  if (flag) {
    event.stopPropagation();
    event.preventDefault();
  }
};

CarouselTablist.prototype.handleTabClick = function (event) {
  var index = this.tabNodes.indexOf(event.currentTarget);
  this.setSelectedTab(index, true);
};

CarouselTablist.prototype.handleTabFocus = function () {
  this.tablistNode.classList.add('focus');
  this.liveRegionNode.setAttribute('aria-live', 'polite');
  this.hasFocus = true;
};

CarouselTablist.prototype.handleTabBlur = function () {
  this.tablistNode.classList.remove('focus');
  if (this.playState) {
    this.liveRegionNode.setAttribute('aria-live', 'off');
  }

  this.hasFocus = false;
};

CarouselTablist.prototype.handleTabpanelFocusIn = function () {
  this.hasFocus = true;
};

CarouselTablist.prototype.handleTabpanelFocusOut = function () {
  this.hasFocus = false;
};

window.addEventListener('load', function () {
  var carouselEls = document.querySelectorAll('.carousel-tablist');
  for (var i = 0; i < carouselEls.length; i++) {
    new CarouselTablist(carouselEls[i]);
  }
}, false);


document.addEventListener('DOMContentLoaded', () => {
  let currentIndex = 0;
  const items = document.querySelectorAll('.carousel-item');
  const tabs = document.querySelectorAll('[role="tab"]');
  const carouselContainer = document.querySelector('.carousel-tablist');
  let isFocused = false;

  // Función para mostrar el slide activo
  const showSlide = (index) => {
    items.forEach((item, i) => {
      item.classList.remove('active');
      tabs[i].setAttribute('aria-selected', 'false');
      tabs[i].setAttribute('tabindex', '-1');
    });

    items[index].classList.add('active');
    tabs[index].setAttribute('aria-selected', 'true');
    tabs[index].setAttribute('tabindex', '0');
  };

  // Mover al siguiente slide
  const moveToNextSlide = () => {
    currentIndex = (currentIndex + 1) % items.length;
    showSlide(currentIndex);
  };

  // Mover al slide anterior
  const moveToPreviousSlide = () => {
    currentIndex = (currentIndex - 1 + items.length) % items.length;
    showSlide(currentIndex);
  };

  // Establecer el foco en el carrusel
  carouselContainer.addEventListener('focusin', () => {
    isFocused = true;
  });

  // Remover el foco del carrusel
  carouselContainer.addEventListener('focusout', () => {
    isFocused = false;
  });

  // Navegar con las teclas de flecha solo cuando el carrusel tiene el foco
  document.addEventListener('keydown', (event) => {
    if (isFocused) {
      if (event.key === 'ArrowRight') {
        moveToNextSlide();
      } else if (event.key === 'ArrowLeft') {
        moveToPreviousSlide();
      }
    }
  });

  // Configurar los botones de control
  document.querySelector('.carousel-control-next').addEventListener('click', moveToNextSlide);
  document.querySelector('.carousel-control-prev').addEventListener('click', moveToPreviousSlide);

  // Configurar los botones de tabs
  tabs.forEach((tab, index) => {
    tab.addEventListener('click', () => {
      currentIndex = index;
      showSlide(currentIndex);
    });

    tab.addEventListener('keydown', (event) => {
      if (event.key === 'ArrowRight') {
        moveToNextSlide();
      } else if (event.key === 'ArrowLeft') {
        moveToPreviousSlide();
      }
    });
  });

  // Inicializar el carrusel con el primer slide
  showSlide(currentIndex);
});



  </script>
          